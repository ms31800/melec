# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-18 16:57
from __future__ import unicode_literals

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='attitude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AP1', models.CharField(choices=[(b'OUI', b'OUI'), (b'NON', b'NON'), (b'En progres', b'En progres')],
                                         default=b'Non evaluee', max_length=100,
                                         verbose_name=b'AP1:faire preuve de rigueur et de pr\xc3\xa9cision')),
                ('AP2', models.CharField(choices=[(b'OUI', b'OUI'), (b'NON', b'NON'), (b'En progres', b'En progres')],
                                         default=b'Non evaluee', max_length=100,
                                         verbose_name=b'AP2:faire preuve d\xe2\x80\x99esprit d\xe2\x80\x99\xc3\xa9quipe')),
                ('AP3', models.CharField(choices=[(b'OUI', b'OUI'), (b'NON', b'NON'), (b'En progres', b'En progres')],
                                         default=b'Non evaluee', max_length=100,
                                         verbose_name=b'AP3:faire preuve de curiosit\xc3\xa9 et d\xe2\x80\x99\xc3\xa9coute')),
                ('AP4', models.CharField(choices=[(b'OUI', b'OUI'), (b'NON', b'NON'), (b'En progres', b'En progres')],
                                         default=b'Non evaluee', max_length=100,
                                         verbose_name=b'AP4:faire preuve d\xe2\x80\x99initiative')),
                ('AP5', models.CharField(choices=[(b'OUI', b'OUI'), (b'NON', b'NON'), (b'En progres', b'En progres')],
                                         default=b'Non evaluee', max_length=100,
                                         verbose_name=b'AP5:faire preuve d\xe2\x80\x99analyse critique')),
            ],
        ),
        migrations.CreateModel(
            name='attribution_d_un_chantier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name=b'Date de d\xc3\xa9but de chantier')),
                ('date_fin', models.DateField(verbose_name=b'Date de fin de chantier')),
                ('Nb_heure', models.PositiveSmallIntegerField(verbose_name=b"Nombre d'heures pr\xc3\xa9vues")),
            ],
        ),
        migrations.CreateModel(
            name='chantier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activite', models.CharField(max_length=130, verbose_name=b'Activit\xc3\xa9 pr\xc3\xa9vue')),
                ('type', models.CharField(choices=[(b'Domestique', b'Domestique'), (b'Industriel', b'Industriel'),
                                                   (b'Tertiaire', b'Tertiaire')], default=b'Domestique',
                                          max_length=20)),
                ('reseau', models.CharField(
                    choices=[(b'Mono', b'Mono'), (b'Tri', b'Tri'), (b'Courant faible', b'Courant faible')],
                    default=b'mono', max_length=20)),
                ('slt', models.CharField(
                    choices=[(b'TT', b'TT'), (b'TN', b'TN'), (b'IT', b'IT'), (b'sans objet', b'sans objet'),
                             (b'je ne sais pas', b'je ne sais pas')], default=b'je ne sais pas', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='competenceC1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C1', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                default=b'Non evaluee',
                                                verbose_name=b'C1:Analyser les conditions de l\xe2\x80\x99op\xc3\xa9ration et son contexte')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC10',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C10', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                 default=b'Non evaluee',
                                                 verbose_name=b'C10:Exploiter les outils num\xc3\xa9riques dans le contexte professionnel')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC11',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C11', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                 default=b'Non evaluee',
                                                 verbose_name=b'C11:Compl\xc3\xa9ter les documents li\xc3\xa9s aux op\xc3\xa9rations')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC12',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C12', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                 default=b'Non evaluee',
                                                 verbose_name=b'C12:Communiquer entre professionnels sur l\xe2\x80\x99op\xc3\xa9ration')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC13',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C13', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                 default=b'Non evaluee',
                                                 verbose_name=b'C13:Communiquer avec le client/usager sur l\xe2\x80\x99op\xc3\xa9ration')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C2', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                default=b'Non evaluee',
                                                verbose_name=b'C2:Organiser l\xe2\x80\x99op\xc3\xa9ration dans son contexte')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C3', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                default=0,
                                                verbose_name=b'C3:D\xc3\xa9finir une installation \xc3\xa0 l\xe2\x80\x99aide de solutions pr\xc3\xa9\xc3\xa9tablies')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C4', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                default=b'Non evaluee',
                                                verbose_name=b'C4:R\xc3\xa9aliser une installation de mani\xc3\xa8re \xc3\xa9co-responsable')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C5', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                default=b'Non evaluee',
                                                verbose_name=b'C5:Contr\xc3\xb4ler les grandeurs caract\xc3\xa9ristiques de l\xe2\x80\x99installation')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C6', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                default=b'Non evaluee',
                                                verbose_name=b'C6:R\xc3\xa9gler, param\xc3\xa9trer les mat\xc3\xa9riels de l\xe2\x80\x99installation')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC7',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C7', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                default=b'Non evaluee',
                                                verbose_name=b'C7:Valider le fonctionnement de l\xe2\x80\x99installation')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC8',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C8', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                default=b'Non evaluee',
                                                verbose_name=b'C8:Diagnostiquer un dysfonctionnement')),
            ],
        ),
        migrations.CreateModel(
            name='competenceC9',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C9', models.SmallIntegerField(choices=[(0, b'Non acquise'), (1, b'Acquise'), (2, b'Non evaluee')],
                                                default=b'Non evaluee',
                                                verbose_name=b'C9:Remplacer un mat\xc3\xa9riel \xc3\xa9lectrique')),
            ],
        ),
        migrations.CreateModel(
            name='eleve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30, verbose_name=b'Nom')),
                ('prenom', models.CharField(max_length=30, verbose_name=b'Pr\xc3\xa9nom')),
                ('date_de_naissance', models.DateField(verbose_name=b'Date de naissance')),
            ],
        ),
        migrations.CreateModel(
            name='enseignant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(
                    choices=[(b'M. Chaneau P', b'M. Chaneau P'), (b'M. Chanfreau JF', b'M. Chanfreau JF'),
                             (b'M. Ducuing D', b'M. Ducuing D'), (b'M. Sanchez M', b'M. Sanchez M')],
                    default=b'M. Chaneau P', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='evaluation_Communication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee',
                 models.CharField(choices=[(b'2nde', b'2nde'), (b'1ere', b'1ere'), (b'Tale', b'Tale')], default=b'2nde',
                                  max_length=7, verbose_name=b'Classe')),
                ('heurePass', models.PositiveSmallIntegerField(verbose_name=b"Nombre d'heures pass\xc3\xa9es")),
                ('statut', models.CharField(choices=[(b'Dossier chantier complet', b'Dossier chantier complet'),
                                                     (b'Dossier chantier incomplet', b'Dossier chantier complet'),
                                                     (b'Non rendu', b'Non rendu'), (b'Absent', b'Absent')],
                                            default=b'Absent', max_length=35)),
                ('appreciation', models.CharField(max_length=150, verbose_name=b'Appr\xc3\xa9ciation')),
                ('Note', models.PositiveSmallIntegerField(verbose_name=b'Note propos\xc3\xa9e /20')),
                ('attitude_Communication',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.attitude',
                                   verbose_name=b'attitude(s) professionnelle(s) acquise(s)')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.eleve',
                                               verbose_name=b'candidat')),
                ('chantier_a_evaluer',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.attribution_d_un_chantier',
                                   verbose_name=b'chantier \xc3\xa0 \xc3\xa9valuer')),
                ('competenceC1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC1',
                                                   verbose_name=b'C1')),
                ('competenceC10',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC10',
                                   verbose_name=b'C10')),
                ('competenceC11',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC11',
                                   verbose_name=b'C11')),
                ('competenceC12',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC12',
                                   verbose_name=b'C12')),
                ('competenceC13',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC13',
                                   verbose_name=b'C13')),
                ('nom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.enseignant',
                                          verbose_name=b'Enseignant responsable')),
            ],
        ),
        migrations.CreateModel(
            name='evaluation_Maintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee',
                 models.CharField(choices=[(b'2nde', b'2nde'), (b'1ere', b'1ere'), (b'Tale', b'Tale')], default=b'2nde',
                                  max_length=7, verbose_name=b'Classe')),
                ('heurePass', models.PositiveSmallIntegerField(verbose_name=b"Nombre d'heures pass\xc3\xa9es")),
                ('statut', models.CharField(choices=[(b'Maintenance terminee', b'Maintenance terminee'),
                                                     (b'Terminee hors delai', b'Terminee hors delai'),
                                                     (b'Stoppe', b'Stoppe'), (b'Absent', b'Absent')], default=b'Absent',
                                            max_length=35)),
                ('appreciation', models.CharField(max_length=150, verbose_name=b'Appr\xc3\xa9ciation')),
                ('Note', models.PositiveSmallIntegerField(verbose_name=b'Note propos\xc3\xa9e /20')),
                ('attitude_Maintenance',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.attitude',
                                   verbose_name=b'attitude(s) professionnelle(s) acquise(s)')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.eleve',
                                               verbose_name=b'candidat')),
                ('chantier_a_evaluer',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.attribution_d_un_chantier',
                                   verbose_name=b'chantier \xc3\xa0 \xc3\xa9valuer')),
                ('competenceC10',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC10',
                                   verbose_name=b'C10')),
                ('competenceC2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC2',
                                                   verbose_name=b'C2')),
                ('competenceC5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC5',
                                                   verbose_name=b'C5')),
                ('competenceC6', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC6',
                                                   verbose_name=b'C6')),
                ('competenceC7', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC7',
                                                   verbose_name=b'C7')),
                ('competenceC8', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC8',
                                                   verbose_name=b'C8')),
                ('competenceC9', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC9',
                                                   verbose_name=b'C9')),
                ('nom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.enseignant',
                                          verbose_name=b'Enseignant responsable')),
            ],
        ),
        migrations.CreateModel(
            name='evaluation_Mise_en_service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee',
                 models.CharField(choices=[(b'2nde', b'2nde'), (b'1ere', b'1ere'), (b'Tale', b'Tale')], default=b'2nde',
                                  max_length=7, verbose_name=b'Classe')),
                ('statut', models.CharField(choices=[(b'Mise en service terminee', b'Mise en service terminee'),
                                                     (b'Terminee hors delai', b'Terminee hors delai'),
                                                     (b'Stoppe', b'Stoppe'), (b'Absent', b'Absent')], default=b'Absent',
                                            max_length=35)),
                ('heurePass', models.PositiveSmallIntegerField(verbose_name=b"Nombre d'heures pass\xc3\xa9es")),
                ('appreciation', models.CharField(max_length=150, verbose_name=b'Appr\xc3\xa9ciation')),
                ('Note', models.PositiveSmallIntegerField(verbose_name=b'Note propos\xc3\xa9e /20')),
                ('attitude_Mise_en_service',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.attitude',
                                   verbose_name=b'attitude(s) professionnelle(s) acquise(s)')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.eleve',
                                               verbose_name=b'candidat')),
                ('chantier_a_evaluer',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.attribution_d_un_chantier',
                                   verbose_name=b'chantier \xc3\xa0 \xc3\xa9valuer')),
                ('competenceC10',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC10',
                                   verbose_name=b'C10')),
                ('competenceC2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC2',
                                                   verbose_name=b'C2')),
                ('competenceC5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC5',
                                                   verbose_name=b'C5')),
                ('competenceC6', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC6',
                                                   verbose_name=b'C6')),
                ('competenceC7', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC7',
                                                   verbose_name=b'C7')),
                ('competenceC8', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC8',
                                                   verbose_name=b'C8')),
                ('competenceC9', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC9',
                                                   verbose_name=b'C9')),
                ('nom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.enseignant',
                                          verbose_name=b'Enseignant responsable')),
            ],
        ),
        migrations.CreateModel(
            name='evaluation_Preparation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee',
                 models.CharField(choices=[(b'2nde', b'2nde'), (b'1ere', b'1ere'), (b'Tale', b'Tale')], default=b'2nde',
                                  max_length=7, verbose_name=b'Classe')),
                ('heurePass', models.PositiveSmallIntegerField(verbose_name=b"Nombre d'heures pass\xc3\xa9es")),
                ('statut', models.CharField(
                    choices=[(b'Preparation chantier terminee', b'Preparation chantier terminee'),
                             (b'Terminee hors delai', b'Terminee hors delai'), (b'Stoppe', b'Stoppe'),
                             (b'Absent', b'Absent')], default=b'Absent', max_length=35)),
                ('appreciation', models.CharField(max_length=150, verbose_name=b'Appr\xc3\xa9ciation')),
                ('Note', models.PositiveSmallIntegerField(verbose_name=b'Note propos\xc3\xa9e /20')),
                ('attitude_Preparation',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.attitude',
                                   verbose_name=b'attitude(s) professionnelle(s) acquise(s)')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.eleve',
                                               verbose_name=b'candidat')),
                ('chantier_a_evaluer',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.attribution_d_un_chantier',
                                   verbose_name=b'chantier \xc3\xa0 \xc3\xa9valuer')),
                ('competenceC1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC1',
                                                   verbose_name=b'C1')),
                ('competenceC10',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC10',
                                   verbose_name=b'C10')),
                ('competenceC11',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC11',
                                   verbose_name=b'C11')),
                ('competenceC12',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC12',
                                   verbose_name=b'C12')),
                ('competenceC2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC2',
                                                   verbose_name=b'C2')),
                ('competenceC3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC3',
                                                   verbose_name=b'C3')),
                ('nom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.enseignant',
                                          verbose_name=b'Enseignant responsable')),
            ],
        ),
        migrations.CreateModel(
            name='evaluation_Realisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee',
                 models.CharField(choices=[(b'2nde', b'2nde'), (b'1ere', b'1ere'), (b'Tale', b'Tale')], default=b'2nde',
                                  max_length=7, verbose_name=b'Classe')),
                ('heurePass', models.PositiveSmallIntegerField(verbose_name=b"Nombre d'heures pass\xc3\xa9es")),
                ('statut', models.CharField(
                    choices=[(b'Chantier termine', b'Chantier termine'), (b'Termine hors delai', b'Termine hors delai'),
                             (b'Stoppe', b'Stoppe'), (b'Absent', b'Absent')], default=b'Absent', max_length=20)),
                ('appreciation', models.CharField(max_length=150, verbose_name=b'Appr\xc3\xa9ciation')),
                ('Note', models.PositiveSmallIntegerField(verbose_name=b'Note propos\xc3\xa9e /20')),
                ('attitude_Realisation',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.attitude',
                                   verbose_name=b'attitude(s) professionnelle(s) acquise(s)')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.eleve',
                                               verbose_name=b'candidat')),
                ('chantier_a_evaluer',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.attribution_d_un_chantier',
                                   verbose_name=b'chantier \xc3\xa0 \xc3\xa9valuer')),
                ('competenceC10',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC10',
                                   verbose_name=b'C10')),
                ('competenceC11',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC11',
                                   verbose_name=b'C11')),
                ('competenceC12',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC12',
                                   verbose_name=b'C12')),
                ('competenceC2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC2',
                                                   verbose_name=b'C2')),
                ('competenceC4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC4',
                                                   verbose_name=b'C4')),
                ('competenceC5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.competenceC5',
                                                   verbose_name=b'C5')),
                ('nom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.enseignant',
                                          verbose_name=b'Enseignant responsable')),
            ],
        ),
        migrations.CreateModel(
            name='tacheC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tache_5_1', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 5-1:participer \xc3\xa0 la mise \xc3\xa0 jour du dossier technique de l\xe2\x80\x99installation')),
                ('tache_5_2', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 5-2:\xc3\xa9changer sur le d\xc3\xa9roulement des op\xc3\xa9rations, expliquer le fonctionnement de l\xe2\x80\x99installation \xc3\xa0 l\xe2\x80\x99interne et \xc3\xa0 l\xe2\x80\x99externe')),
                ('tache_5_3', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 5-3:conseiller le client, lui proposer une prestation compl\xc3\xa9mentaire, une modification ou une am\xc3\xa9lioration')),
            ],
        ),
        migrations.CreateModel(
            name='tacheMa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tache_4_1', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 4-1:r\xc3\xa9aliser une op\xc3\xa9ration de maintenance pr\xc3\xa9ventive')),
                ('tache_4_2', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 4-2:r\xc3\xa9aliser une op\xc3\xa9ration de d\xc3\xa9pannage')),
            ],
        ),
        migrations.CreateModel(
            name='tacheMi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tache_3_1', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 3-1:r\xc3\xa9aliser les v\xc3\xa9rifications, les r\xc3\xa9glages, les param\xc3\xa9trages, les essais n\xc3\xa9cessaires \xc3\xa0 la mise en service de l\xe2\x80\x99installation')),
                ('tache_3_2', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 3-2:participer \xc3\xa0 la r\xc3\xa9ception technique et aux lev\xc3\xa9es de r\xc3\xa9serves de l\xe2\x80\x99installation')),
            ],
        ),
        migrations.CreateModel(
            name='tacheP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tache_1_1', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 1-1:prendre connaissance du dossier relatif aux op\xc3\xa9rations \xc3\xa0 r\xc3\xa9aliser, le constituer pour une op\xc3\xa9ration simple')),
                ('tache_1_2', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 1-2:rechercher et expliquer les informations relatives aux op\xc3\xa9rations et aux conditions d\xe2\x80\x99ex\xc3\xa9cution')),
                ('tache_1_3', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 1-3:v\xc3\xa9rifier et compl\xc3\xa9ter si n\xc3\xa9cessaire la liste des mat\xc3\xa9riels, \xc3\xa9quipements et outillages n\xc3\xa9cessaires aux op\xc3\xa9rations')),
                ('tache_1_4', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 1-4:r\xc3\xa9partir les t\xc3\xa2ches en fonction des habilitations, des certifications des \xc3\xa9quipiers et du planning des autres intervenants')),
            ],
        ),
        migrations.CreateModel(
            name='tacheR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tache_2_1', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 2-1:organiser le poste de travail')),
                ('tache_2_2', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 2-2:implanter, poser, installer les mat\xc3\xa9riels \xc3\xa9lectriques')),
                ('tache_2_3', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 2-3:c\xc3\xa2bler, raccorder les mat\xc3\xa9riels \xc3\xa9lectriques')),
                ('tache_2_4', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 2-4:g\xc3\xa9rer les activit\xc3\xa9s de son \xc3\xa9quipe')),
                ('tache_2_5', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 2-5:coordonner son activit\xc3\xa9 par rapport \xc3\xa0 celles des autres intervenants')),
                ('tache_2_6', models.CharField(
                    choices=[(b'Conforme aux resultats attendus', b'Conforme aux resultats attendus'),
                             (b'NON conforme aux resultats attendus', b'Non conforme aux resultats attendus '),
                             (b'En phase d apprentissage', b'En phase d apprentissage')],
                    default=b'En phase d apprentissage', max_length=100,
                    verbose_name=b'T 2-6:mener son activit\xc3\xa9 de mani\xc3\xa8re \xc3\xa9co-responsable')),
            ],
        ),
        migrations.AddField(
            model_name='evaluation_realisation',
            name='tache_Realisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.tacheR',
                                    verbose_name=b'T\xc3\xa2che(s) valid\xc3\xa9e(s)'),
        ),
        migrations.AddField(
            model_name='evaluation_preparation',
            name='tache_Preparation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.tacheP',
                                    verbose_name=b'T\xc3\xa2che(s) valid\xc3\xa9e(s)'),
        ),
        migrations.AddField(
            model_name='evaluation_mise_en_service',
            name='tache_Mise_en_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.tacheMi',
                                    verbose_name=b'T\xc3\xa2che(s) valid\xc3\xa9e(s)'),
        ),
        migrations.AddField(
            model_name='evaluation_maintenance',
            name='tache_Maintenance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.tacheMa',
                                    verbose_name=b'T\xc3\xa2che(s) valid\xc3\xa9e(s)'),
        ),
        migrations.AddField(
            model_name='evaluation_communication',
            name='tache_Communication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.tacheC',
                                    verbose_name=b'T\xc3\xa2che(s) valid\xc3\xa9e(s)'),
        ),
        migrations.AddField(
            model_name='attribution_d_un_chantier',
            name='electricien',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.eleve',
                                    verbose_name=b'\xc3\xa9lectricien d\xc3\xa9sign\xc3\xa9'),
        ),
        migrations.AddField(
            model_name='attribution_d_un_chantier',
            name='travail_eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='melec.chantier',
                                    verbose_name=b'Chantier affect\xc3\xa9 \xc3\xa0 un \xc3\xa9lectricien'),
        ),
    ]
